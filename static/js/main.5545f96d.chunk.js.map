{"version":3,"sources":["api/routes.ts","api/api.ts","feauteres/auth/authSlice.ts","feauteres/users/usersSlice.ts","app/rootReducer.ts","app/store.ts","feauteres/auth/AuthForm.tsx","feauteres/users/UserEditForm.tsx","feauteres/users/UserAddForm.tsx","feauteres/users/userAddModal.tsx","feauteres/users/usersTable.tsx","utils/dates.ts","feauteres/users/usersPage.tsx","app/App.tsx","index.tsx"],"names":["Routes","getAuthToken","credentials","a","axios","post","AuthToken","then","res","data","token","getUsers","get","Users","headers","Authorization","postUser","userData","putUser","userId","put","patchUser","patch","deleteUser","delete","authSlice","createSlice","name","initialState","isAuthenticated","isLoading","error","user","reducers","authStart","state","authSucess","payload","store","set","deauthenticate","remove","authFailure","action","authReducer","reducer","actions","startLoading","loadingFailed","users","usersById","allIds","getUserStart","getUsersStart","postUserStart","putUserStart","patchUserStart","deleteUserStart","getUserSuccess","id","getUsersSuccess","forEach","push","postUserSucess","putUserSucess","patchUserSucess","deleteUserSucess","splice","findIndex","getUserFailure","getUsersFailure","postUserFailure","putUserFailure","patchUserFailure","deleteUserFailure","usersReducer","rootReducer","combineReducers","auth","localStore","configureStore","preloadedState","AuthUserSchema","yup","username","required","min","max","matches","password","AuthForm","dispatch","useDispatch","history","useHistory","useSelector","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","Promise","resolve","message","to","Row","as","className","Col","xl","lg","md","sm","Card","Body","Title","Alert","variant","Form","noValidate","e","handleSubmit","Group","controlId","Label","Control","type","placeholder","onChange","handleChange","value","isInvalid","errors","autoFocus","Feedback","Button","disabled","isValid","dirty","isSubmitting","EditUserSchema","firstName","lastName","isActive","UserEditForm","handlePatchUser","handlePutUser","useState","first_name","last_name","is_active","setInitialValues","setSubmitting","setStatus","setValues","setTimeout","isEditSucess","status","Check","label","checked","Text","AddUserSchema","UserAddForm","handlePostUser","userError","isUserAdded","UserAddModal","showModal","setShowModal","handleClose","onClick","Modal","show","onHide","centered","Header","closeButton","Footer","CellAction","handleDeleteUser","UsersTable","deleteUserFromApi","deletedUserId","putUserToApi","pathUserToApi","postUserToApi","columns","sort","enabled","formatter","cell","row","cellUserId","cells","_","map","last_login","date","Date","formatDistanceToNow","addSuffix","is_superuser","search","debounceTimeout","pagination","limit","summary","language","previous","next","UsersPage","useEffect","getUsersFromApi","fetchedUsers","fetchUsers","App","Navbar","bg","expand","Brand","Container","fluid","exact","path","component","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.5545f96d.chunk.js","sourcesContent":["export enum Routes {\n  AuthToken = 'http://emphasoft-test-assignment.herokuapp.com/api-token-auth/',\n  Users = 'http://emphasoft-test-assignment.herokuapp.com/api/v1/users',\n}\n","import axios from 'axios';\n\nimport { Routes } from './routes';\n\nexport interface MAuthToken {\n  username: string;\n  password: string;\n}\n\nexport interface MUser {\n  id: number;\n  username: string;\n  first_name?: string;\n  last_name?: string;\n  password: string;\n  is_active: boolean;\n  last_login?: string;\n  is_superuser?: boolean;\n}\n\nexport interface MUserData {\n  username: string;\n  first_name?: string;\n  last_name?: string;\n  password?: string;\n  is_active: boolean;\n}\n\nexport const getAuthToken = async (\n  credentials: MAuthToken\n): Promise<string> => {\n  return await axios\n    .post(Routes.AuthToken, credentials)\n    .then((res) => res.data.token);\n};\n\nexport const getUsers = async (token: string): Promise<MUser[]> => {\n  return await axios\n    .get(`${Routes.Users}/`, {\n      headers: {\n        Authorization: `Token ${token}`,\n      },\n    })\n    .then((res) => res.data);\n};\n\nexport const getUser = async (\n  userId: number,\n  token: string\n): Promise<MUser> => {\n  return await axios\n    .get(`${Routes.Users}/${userId}/`, {\n      headers: {\n        Authorization: `Token ${token}`,\n      },\n    })\n    .then((res) => res.data);\n};\n\nexport const postUser = async (\n  userData: MUserData,\n  token: string\n): Promise<MUser> => {\n  return await axios\n    .post(`${Routes.Users}/`, userData, {\n      headers: {\n        Authorization: `Token ${token}`,\n        'Content-Type': 'application/json',\n      },\n    })\n    .then((res) => res.data);\n};\n\nexport const putUser = async (\n  userId: number,\n  userData: MUserData,\n  token: string\n): Promise<MUser> => {\n  return await axios\n    .put(`${Routes.Users}/${userId}/`, userData, {\n      headers: {\n        Authorization: `Token ${token}`,\n        'Content-Type': 'application/json',\n      },\n    })\n    .then((res) => res.data);\n};\n\nexport const patchUser = async (\n  userId: number,\n  userData: MUserData,\n  token: string\n): Promise<MUser> => {\n  return await axios\n    .patch(`${Routes.Users}/${userId}/`, userData, {\n      headers: {\n        Authorization: `Token ${token}`,\n        'Content-Type': 'application/json',\n      },\n    })\n    .then((res) => res.data);\n};\n\nexport const deleteUser = async (\n  userId: number,\n  token: string\n): Promise<number> => {\n  return await axios\n    .delete(`${Routes.Users}/${userId}/`, {\n      headers: {\n        Authorization: `Token ${token}`,\n      },\n    })\n    .then(() => userId);\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk } from './../../app/store';\n\nimport store from 'store';\n\nimport { getAuthToken, MAuthToken } from '../../api/api';\n\ninterface AuthState {\n  isAuthenticated: boolean;\n  token: string | null;\n  isLoading: boolean;\n  error: string | null;\n  user: {\n    firstName?: string;\n    lastName?: string;\n    lastLogin?: string;\n    isSuperUser?: boolean;\n    isActive?: boolean;\n  } | null;\n}\n\nconst authInitialState: AuthState = {\n  isAuthenticated: false,\n  token: null,\n  isLoading: false,\n  error: null,\n  user: null,\n};\n\nconst startLoading = (state: AuthState) => {\n  state.isLoading = true;\n};\n\nconst loadingFailure = (state: AuthState, action: PayloadAction<string>) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: authInitialState,\n  reducers: {\n    authStart: startLoading,\n    authSucess(state, { payload }: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = null;\n      state.isAuthenticated = true;\n      state.token = payload;\n\n      store.set('token', payload);\n    },\n    deauthenticate(state) {\n      state.isAuthenticated = false;\n      state.token = null;\n\n      store.remove('token');\n    },\n    authFailure: loadingFailure,\n  },\n});\n\nexport const authReducer = authSlice.reducer;\n\nexport const {\n  authStart,\n  authSucess,\n  authFailure,\n  deauthenticate,\n} = authSlice.actions;\n\nexport const authenticate = (credentials: MAuthToken): AppThunk => async (\n  dispatch\n) => {\n  try {\n    dispatch(authStart());\n    const token = await getAuthToken(credentials);\n    dispatch(authSucess(token));\n  } catch (error) {\n    dispatch(authFailure(error.message));\n  }\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport {\n  MUser,\n  MUserData,\n  getUsers as getUsersFromApi,\n  getUser as getUserFromApi,\n  postUser as postUserToApi,\n  putUser as putUserToApi,\n  patchUser as pathUserToApi,\n  deleteUser as deleteUserFromApi,\n} from '../../api/api';\nimport { AppThunk } from '../../app/store';\n\ninterface UsersState {\n  usersById: Record<string, MUser>;\n  allIds: number[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst usersInitialState: UsersState = {\n  usersById: {},\n  allIds: [],\n  isLoading: false,\n  error: null,\n};\n\nfunction startLoading(state: UsersState) {\n  state.isLoading = true;\n}\n\nfunction loadingFailed(state: UsersState, action: PayloadAction<string>) {\n  state.isLoading = false;\n  state.error = action.payload;\n}\n\nconst users = createSlice({\n  name: 'users',\n  initialState: usersInitialState,\n  reducers: {\n    getUserStart: startLoading,\n    getUsersStart: startLoading,\n    postUserStart: startLoading,\n    putUserStart: startLoading,\n    patchUserStart: startLoading,\n    deleteUserStart: startLoading,\n    getUserSuccess(state, { payload }: PayloadAction<MUser>) {\n      const { id } = payload;\n      state.usersById[id] = payload;\n      state.isLoading = false;\n      state.error = null;\n    },\n    getUsersSuccess(state, { payload }: PayloadAction<MUser[]>) {\n      state.isLoading = false;\n      state.error = null;\n\n      payload.forEach((user) => {\n        state.usersById[user.id] = user;\n        state.allIds.push(user.id);\n      });\n    },\n    postUserSucess(state, { payload }: PayloadAction<MUser>) {\n      const { id } = payload;\n\n      state.isLoading = false;\n      state.error = null;\n      state.usersById[id] = payload;\n      state.allIds.push(id);\n    },\n    putUserSucess(state, { payload }: PayloadAction<MUser>) {\n      const { id } = payload;\n\n      state.isLoading = false;\n      state.error = null;\n      state.usersById[id] = payload;\n    },\n    patchUserSucess(state, { payload }: PayloadAction<MUser>) {\n      const { id } = payload;\n\n      state.isLoading = false;\n      state.error = null;\n      state.usersById[id] = payload;\n    },\n    deleteUserSucess(state, { payload }: PayloadAction<number>) {\n      state.isLoading = false;\n      state.error = null;\n      delete state.usersById[payload];\n      state.allIds.splice(\n        state.allIds.findIndex((id) => id === payload),\n        1\n      );\n    },\n    getUserFailure: loadingFailed,\n    getUsersFailure: loadingFailed,\n    postUserFailure: loadingFailed,\n    putUserFailure: loadingFailed,\n    patchUserFailure: loadingFailed,\n    deleteUserFailure: loadingFailed,\n  },\n});\n\nexport const {\n  getUsersStart,\n  getUsersSuccess,\n  getUserStart,\n  getUserSuccess,\n  postUserStart,\n  postUserSucess,\n  putUserStart,\n  putUserSucess,\n  patchUserStart,\n  patchUserSucess,\n  deleteUserStart,\n  deleteUserSucess,\n  getUserFailure,\n  getUsersFailure,\n  postUserFailure,\n  putUserFailure,\n  patchUserFailure,\n  deleteUserFailure,\n} = users.actions;\n\nexport const usersReducer = users.reducer;\n\nexport const fetchUsers = (token: string): AppThunk => async (dispatch) => {\n  try {\n    dispatch(getUsersStart());\n    const fetchedUsers = await getUsersFromApi(token);\n    dispatch(getUsersSuccess(fetchedUsers));\n  } catch (err) {\n    dispatch(getUsersFailure(err.message));\n  }\n};\n\nexport const fetchUser = (userId: number, token: string): AppThunk => async (\n  dispatch\n) => {\n  try {\n    dispatch(getUserStart());\n    const user = await getUserFromApi(userId, token);\n    dispatch(getUserSuccess(user));\n  } catch (err) {\n    dispatch(getUserFailure(err.message));\n  }\n};\n\nexport const postUser = (\n  token: string,\n  userData: MUserData\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(postUserStart());\n    const user = await postUserToApi(userData, token);\n    dispatch(postUserSucess(user));\n  } catch (err) {\n    dispatch(postUserFailure(err.message));\n  }\n};\n\nexport const putUser = (\n  userId: number,\n  userData: MUserData,\n  token: string\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(putUserStart());\n    const user = await putUserToApi(userId, userData, token);\n    dispatch(putUserSucess(user));\n  } catch (err) {\n    dispatch(putUserFailure(err.message));\n  }\n};\n\nexport const patchUser = (\n  userId: number,\n  userData: MUserData,\n  token: string\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(patchUserStart());\n    const user = await pathUserToApi(userId, userData, token);\n    dispatch(patchUserSucess(user));\n  } catch (err) {\n    dispatch(patchUserFailure(err.message));\n  }\n};\n\nexport const deleteUser = (userId: number, token: string): AppThunk => async (\n  dispatch\n) => {\n  try {\n    dispatch(deleteUserStart());\n    const deletedUserId = await deleteUserFromApi(userId, token);\n    dispatch(deleteUserSucess(deletedUserId));\n  } catch (err) {\n    dispatch(deleteUserFailure(err.message));\n  }\n};\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport { authReducer } from '../feauteres/auth/authSlice';\nimport { usersReducer } from '../feauteres/users/usersSlice';\n\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  users: usersReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport localStore from 'store';\n\nimport { rootReducer, RootState } from './rootReducer';\n\nconst token = localStore.get('token');\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  preloadedState: {\n    auth: {\n      isAuthenticated: !!token,\n      token,\n    },\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","import React from 'react';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useHistory, Redirect } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authenticate } from './authSlice';\nimport { RootState } from '../../app/rootReducer';\n\nimport { Form, Button, Alert, Row, Col, Card } from 'react-bootstrap';\n\nconst AuthUserSchema = yup.object({\n  username: yup\n    .string()\n    .required()\n    .min(1, '*Username must have at least 1 character')\n    .max(150, \"*Username can't be longer than 100 characters\")\n    .matches(/^[\\w.@+-]+$/, '*Username is not valid'),\n  password: yup\n    .string()\n    .required()\n    .min(8, '*Password must have at least 8 character')\n    .max(128, \"*Password can't be longer than 128 characters\")\n    .matches(/^(?=.*[A-Z])(?=.*\\d)/, '*Password is not valid'),\n});\n\ninterface FormikValues {\n  username: string;\n  password: string;\n}\n\nexport const AuthForm: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { error, isAuthenticated } = useSelector((state: RootState) => {\n    return state.auth;\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n    },\n    validationSchema: AuthUserSchema,\n    onSubmit(values: FormikValues, { resetForm }) {\n      Promise.resolve(dispatch(authenticate(values)))\n        .then(() => resetForm())\n        .then(() => {\n          if (!error) {\n            history.push('/');\n          }\n        });\n    },\n  });\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  // react-bootstrap bug that Form components's submit event Type is React.FormEvent<HTMLElement>\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    formik.handleSubmit(e);\n  };\n\n  return (\n    <Row as='section' className='h-100'>\n      <Col xl={4} lg={6} md={8} sm={8} className='m-auto'>\n        <Card>\n          <Card.Body>\n            <Card.Title as='h3'>Sign in</Card.Title>\n            {error && <Alert variant='danger'>{error}</Alert>}\n            <Form noValidate={true} onSubmit={handleSubmit}>\n              <Form.Group controlId='username'>\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter username'\n                  name='username'\n                  onChange={formik.handleChange}\n                  value={formik.values.username}\n                  isInvalid={!!formik.errors.username}\n                  autoFocus={true}\n                />\n                <Form.Control.Feedback type='invalid'>\n                  {formik.errors.username}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type='password'\n                  placeholder='Password'\n                  name='password'\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  isInvalid={!!formik.errors.password}\n                />\n                <Form.Control.Feedback type='invalid'>\n                  {formik.errors.password}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Button\n                variant='primary'\n                type='submit'\n                disabled={\n                  !(formik.isValid && formik.dirty) || formik.isSubmitting\n                }\n              >\n                Submit\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { useFormik } from 'formik';\n\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport * as yup from 'yup';\n\nimport { CellActionProps } from './usersTable';\nimport { MUserData } from '../../api/api';\n\nconst EditUserSchema = yup.object({\n  username: yup\n    .string()\n    .required()\n    .min(1, '*Username must have at least 1 character')\n    .max(150, \"*Username can't be longer than 100 characters\")\n    .matches(/^[\\w.@+-]+$/, '*Username is not valid'),\n  firstName: yup\n    .string()\n    .max(30, \"*First name can't be longer than 30 characters\"),\n  lastName: yup\n    .string()\n    .max(150, \"*Last name can't be longer than 30 characters\"),\n  isActive: yup.boolean().required(),\n});\n\ninterface FormikValues {\n  username: string;\n  firstName?: string;\n  lastName?: string;\n  isActive: boolean;\n}\n\ninterface UserEditFormProps extends CellActionProps {}\n\nexport const UserEditForm: React.FC<UserEditFormProps> = ({\n  user,\n  handlePutUser,\n  handlePatchUser,\n}) => {\n  const [initialValues, setInitialValues] = useState<FormikValues>({\n    username: user.username,\n    firstName: user.first_name,\n    lastName: user.last_name,\n    isActive: user.is_active,\n  });\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: EditUserSchema,\n    onSubmit(values: FormikValues, { setSubmitting, setStatus, setValues }) {\n      const userData: MUserData = {\n        username: values.username,\n        first_name: values.firstName,\n        last_name: values.lastName,\n        is_active: values.isActive,\n      };\n      Promise.resolve(handlePatchUser(user.id, userData))\n        .then(() => setStatus({ type: 'sucess', username: values.username }))\n        .then(() => setInitialValues(values))\n        .then(() => {\n          setTimeout(() => {\n            setSubmitting(false);\n            setStatus('pending');\n          }, 2500);\n        });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    formik.handleSubmit(e);\n  };\n\n  const isEditSucess = formik.status && formik.status.type === 'sucess';\n\n  return (\n    <>\n      {isEditSucess && (\n        <Alert variant='success'>\n          User <b>{formik.status.username}</b> was updated\n        </Alert>\n      )}\n      <Form noValidate={true} onSubmit={handleSubmit}>\n        <Form.Group controlId='username'>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter username'\n            name='username'\n            onChange={formik.handleChange}\n            value={formik.values.username}\n            isInvalid={!!formik.errors.username}\n            autoFocus={true}\n          />\n          <Form.Control.Feedback type='invalid'>\n            {formik.errors.username}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group controlId='firstName'>\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter first name'\n            name='firstName'\n            onChange={formik.handleChange}\n            value={formik.values.firstName}\n            isInvalid={!!formik.errors.firstName}\n          />\n          <Form.Control.Feedback type='invalid'>\n            {formik.errors.firstName}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group controlId='lastName'>\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter last name'\n            name='lastName'\n            onChange={formik.handleChange}\n            value={formik.values.lastName}\n            isInvalid={!!formik.errors.lastName}\n          />\n          <Form.Control.Feedback type='invalid'>\n            {formik.errors.lastName}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group controlId='active'>\n          <Form.Check\n            type='checkbox'\n            label='Active'\n            name='isActive'\n            onChange={formik.handleChange}\n            checked={formik.values.isActive}\n          />\n          <Form.Text className='text-muted'>\n            Designates whether this user should be treated as active.\n          </Form.Text>\n        </Form.Group>\n        <Button\n          variant='primary'\n          type='submit'\n          disabled={!(formik.isValid && formik.dirty) || formik.isSubmitting}\n        >\n          Save changes\n        </Button>\n      </Form>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { useFormik } from 'formik';\n\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport * as yup from 'yup';\n\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\n\nimport { MUserData } from '../../api/api';\n\nconst AddUserSchema = yup.object({\n  username: yup\n    .string()\n    .required()\n    .min(1, '*Username must have at least 1 character')\n    .max(150, \"*Username can't be longer than 100 characters\")\n    .matches(/^[\\w.@+-]+$/, '*Username is not valid'),\n  password: yup\n    .string()\n    .required()\n    .min(8, '*Password must have at least 8 character')\n    .max(128, \"*Password can't be longer than 128 characters\")\n    .matches(/^(?=.*[A-Z])(?=.*\\d)/, '*Password is not valid'),\n  firstName: yup\n    .string()\n    .max(30, \"*First name can't be longer than 30 characters\"),\n  lastName: yup\n    .string()\n    .max(150, \"*Last name can't be longer than 30 characters\"),\n  isActive: yup.boolean().required(),\n});\n\ninterface FormikValues {\n  username: string;\n  password: string;\n  firstName?: string;\n  lastName?: string;\n  isActive: boolean;\n}\n\ninterface UserAddFormProps {\n  handlePostUser: (userData: MUserData) => void;\n  handleClose: () => void;\n}\n\nexport const UserAddForm: React.FC<UserAddFormProps> = ({ handlePostUser }) => {\n  const userError = useSelector((state: RootState) => {\n    return state.users.error;\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      isActive: false,\n    },\n    validationSchema: AddUserSchema,\n    onSubmit(values: FormikValues, { setSubmitting, resetForm, setStatus }) {\n      const userData: MUserData = {\n        username: values.username,\n        password: values.password,\n        first_name: values.firstName,\n        last_name: values.lastName,\n        is_active: values.isActive,\n      };\n      Promise.resolve(handlePostUser(userData))\n        .then(() => setSubmitting(false))\n        .then(() => {\n          if (!userError) {\n            setStatus({ type: 'sucess', username: values.username });\n          }\n        })\n        .then(() => {\n          setTimeout(() => {\n            resetForm();\n          }, 2500);\n        });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    formik.handleSubmit(e);\n  };\n\n  const isUserAdded = formik.status && formik.status.type === 'sucess';\n\n  return (\n    <>\n      {userError && <Alert variant='danger'>{userError}</Alert>}\n      {isUserAdded && (\n        <Alert variant='success'>\n          User <b>{formik.status.username}</b> has created\n        </Alert>\n      )}\n      <Form noValidate={true} onSubmit={handleSubmit}>\n        <Form.Group controlId='username'>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter username'\n            name='username'\n            onChange={formik.handleChange}\n            value={formik.values.username}\n            isInvalid={!!formik.errors.username}\n            autoFocus={true}\n          />\n          <Form.Control.Feedback type='invalid'>\n            {formik.errors.username}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            name='password'\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            isInvalid={!!formik.errors.password}\n            autoFocus={true}\n          />\n          <Form.Control.Feedback type='invalid'>\n            {formik.errors.password}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group controlId='firstName'>\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter first name'\n            name='firstName'\n            onChange={formik.handleChange}\n            value={formik.values.firstName}\n            isInvalid={!!formik.errors.firstName}\n          />\n          <Form.Control.Feedback type='invalid'>\n            {formik.errors.firstName}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group controlId='lastName'>\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter last name'\n            name='lastName'\n            onChange={formik.handleChange}\n            value={formik.values.lastName}\n            isInvalid={!!formik.errors.lastName}\n          />\n          <Form.Control.Feedback type='invalid'>\n            {formik.errors.lastName}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group controlId='active'>\n          <Form.Check\n            type='checkbox'\n            label='Active'\n            name='isActive'\n            onChange={formik.handleChange}\n            checked={formik.values.isActive}\n          />\n          <Form.Text className='text-muted'>\n            Designates whether this user should be treated as active.\n          </Form.Text>\n        </Form.Group>\n        <Button\n          variant='primary'\n          type='submit'\n          disabled={!(formik.isValid && formik.dirty) || formik.isSubmitting}\n        >\n          Add user\n        </Button>\n      </Form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\nimport { UserAddForm } from './UserAddForm';\nimport { MUserData } from '../../api/api';\n\nexport interface UserAddModal {\n  handlePostUser: (userData: MUserData) => void;\n}\n\nexport const UserAddModal: React.FC<UserAddModal> = ({ handlePostUser }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const handleClick = () => {\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <Button variant='success' onClick={handleClick}>\n        Add User\n      </Button>\n      <Modal show={showModal} onHide={handleClose} centered={true}>\n        <Modal.Header closeButton={true}>\n          <Modal.Title>Add user</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <UserAddForm\n            handlePostUser={handlePostUser}\n            handleClose={handleClose}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='secondary' onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { Grid, _ } from 'gridjs-react';\nimport 'gridjs/dist/theme/mermaid.css';\n\nimport { formatToNow } from '../../utils/dates';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteUser, postUser, putUser, patchUser } from './usersSlice';\nimport { RootState } from '../../app/rootReducer';\n\nimport { Button, Modal } from 'react-bootstrap';\nimport { UserEditForm } from './UserEditForm';\nimport { UserAddModal } from './userAddModal';\n\nimport { MUser, MUserData } from '../../api/api';\n\ninterface UsersTableProps {\n  users: MUser[];\n}\n\nexport interface CellActionProps {\n  user: MUser;\n  handleDeleteUser: (userId: number) => void;\n  handlePutUser: (userId: number, userData: MUserData) => void;\n  handlePatchUser: (userId: number, userData: MUserData) => void;\n}\n\nconst CellAction: React.FC<CellActionProps> = ({\n  user,\n  handleDeleteUser,\n  handlePutUser,\n  handlePatchUser,\n}) => {\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const handleClose = () => setShowModal(false);\n\n  const handleClick = () => {\n    setShowModal(true);\n  };\n\n  const handleDeleteClick = () => {\n    handleDeleteUser(user.id);\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Button variant='primary' onClick={handleClick}>\n        Edit\n      </Button>\n      <Modal show={showModal} onHide={handleClose} centered={true}>\n        <Modal.Header closeButton={true}>\n          <Modal.Title>Edit user</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <UserEditForm\n            user={user}\n            handleDeleteUser={handleDeleteUser}\n            handlePutUser={handlePutUser}\n            handlePatchUser={handlePatchUser}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant='danger'\n            onClick={handleDeleteClick}\n            disabled={user.is_active}\n          >\n            Delete\n          </Button>\n          <Button variant='secondary' onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport const UsersTable: React.FC<UsersTableProps> = ({ users }) => {\n  const dispatch = useDispatch();\n\n  const { usersById } = useSelector((state: RootState) => {\n    return state.users;\n  });\n  const { token } = useSelector((state: RootState) => {\n    return state.auth;\n  });\n\n  const handleDeleteUser = (userId: number) => {\n    dispatch(deleteUser(userId, token!));\n  };\n\n  const handlePostUser = (userData: MUserData) => {\n    dispatch(postUser(token!, userData));\n  };\n\n  const handlePutUser = (userId: number, userData: MUserData) => {\n    dispatch(putUser(userId, userData, token!));\n  };\n\n  const handlePatchUser = (userId: number, userData: MUserData) => {\n    dispatch(patchUser(userId, userData, token!));\n  };\n\n  return (\n    <>\n      <h3 className='align-self-center'>Users</h3>\n      <UserAddModal handlePostUser={handlePostUser} />\n      <Grid\n        columns={[\n          {\n            name: 'ID',\n            sort: {\n              enabled: true,\n            },\n          },\n          'Username',\n          'First name',\n          'Last name',\n          'Last Login',\n          'Superuser status',\n          {\n            name: 'Actions',\n            formatter(cell, row) {\n              const cellUserId = row.cells[0].data as number;\n              return _(\n                <CellAction\n                  user={usersById[cellUserId]}\n                  handleDeleteUser={handleDeleteUser}\n                  handlePutUser={handlePutUser}\n                  handlePatchUser={handlePatchUser}\n                />\n              );\n            },\n          },\n        ]}\n        data={users.map((user) => {\n          return [\n            user.id,\n            user.username,\n            user.first_name,\n            user.last_name,\n            user.last_login ? formatToNow(new Date(user.last_login)) : '',\n            user.is_superuser ? 'True' : 'False',\n            null,\n          ];\n        })}\n        search={{\n          debounceTimeout: 1000,\n        }}\n        pagination={{\n          enabled: true,\n          limit: 10,\n          summary: false,\n        }}\n        language={{\n          search: {\n            placeholder: '🔍\\tSearch...',\n          },\n          pagination: {\n            previous: '⬅️',\n            next: '➡️',\n          },\n        }}\n      />\n    </>\n  );\n};\n","import { formatDistanceToNow } from 'date-fns';\n\nexport const formatToNow = (date: Date | number) => {\n  return formatDistanceToNow(date, { addSuffix: true });\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport { fetchUsers } from './usersSlice';\n\nimport { UsersTable } from './usersTable';\nimport { Row, Col } from 'react-bootstrap';\n\nexport const UsersPage: React.FC = () => {\n  const dispatch = useDispatch();\n  const { usersById, allIds } = useSelector((state: RootState) => state.users);\n  const { token } = useSelector((state: RootState) => state.auth);\n  const users = allIds.map((userId) => usersById[userId]);\n\n  useEffect(() => {\n    if (token) {\n      dispatch(fetchUsers(token));\n    }\n  }, [dispatch, token]);\n\n  return (\n    <Row as='section' className='h-100 pt-3'>\n      <Col className='text-center'>\n        <UsersTable users={users} />\n      </Col>\n    </Row>\n  );\n};\n","import React from 'react';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../app/rootReducer';\nimport { deauthenticate } from '../feauteres/auth/authSlice';\n\nimport { AuthForm } from '../feauteres/auth/AuthForm';\nimport { UsersPage } from '../feauteres/users/usersPage';\nimport { Container, Navbar, Button } from 'react-bootstrap';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const { isAuthenticated } = useSelector((state: RootState) => state.auth);\n\n  const handleLogOut = () => {\n    dispatch(deauthenticate());\n  };\n\n  return (\n    <>\n      {isAuthenticated && (\n        <Navbar bg='light' expand='lg'>\n          <Navbar.Brand>Users CMS</Navbar.Brand>\n          <Button className='ml-auto' onClick={handleLogOut}>\n            Log out\n          </Button>\n        </Navbar>\n      )}\n      <Container fluid={true} as='main' className='d-flex flex-column h-100'>\n        <Route exact={true} path='/'>\n          {!isAuthenticated ? <Redirect to='/login' /> : <UsersPage />}\n        </Route>\n        <Route exact={true} path='/login' component={AuthForm} />\n      </Container>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './app/store';\nimport { App } from './app/App';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}